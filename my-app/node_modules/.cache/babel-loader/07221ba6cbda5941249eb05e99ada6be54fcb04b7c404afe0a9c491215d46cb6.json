{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melni\\\\Documents\\\\GitHub\\\\General_Page\\\\my-app\\\\src\\\\components\\\\DragAndDrop\\\\DragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport css from \"../../main.module.css\";\nimport { PageOne } from \"../Game-page/pageOne\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DragAndDrop = () => {\n  _s();\n  const [selectedId, setSelectedId] = useState(null);\n  const [cardList, setCardList] = useState([{\n    id: 1,\n    order: 1,\n    text: \"Card 1\"\n  }, {\n    id: 2,\n    order: 2,\n    text: \"Card 2\"\n  }, {\n    id: 3,\n    order: 3,\n    text: \"Card 3\"\n  }, {\n    id: 4,\n    order: 4,\n    text: \"Card 4\"\n  }]);\n  const [currentCard, setCurrentCard] = useState(null);\n  const handleOnClick = e => {\n    const id = e.target.id;\n    console.log(id);\n    setSelectedId(id);\n  };\n  const dragStartHandler = (e, card) => {\n    console.log(\"card\", card);\n    setCurrentCard(card);\n  };\n  const dragLeaveHandler = e => {\n    e.target.style.background = \"inherit\";\n  };\n  const dragEndHandler = e => {};\n  const dragOverHandler = e => {\n    e.preventDefault();\n    e.target.style.background = \"#808080\";\n  };\n  const dragDropHandler = (e, card) => {\n    e.preventDefault();\n    console.log(\"card\", card);\n    setCardList(cardList.map(i => {\n      if (i.id === card.id) {\n        return {\n          ...i,\n          order: currentCard.order\n        };\n      }\n      if (i.id === currentCard.id) {\n        return {\n          ...i,\n          order: card.order\n        };\n      }\n      return i;\n    }));\n    e.target.style.background = \"white\";\n  };\n  const sortCards = (a, b) => {\n    if (a.order > b.order) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n  const renderContent = () => {\n    if (selectedId === \"back\") {\n      return /*#__PURE__*/_jsxDEV(PageOne, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.BackBtn,\n          onClick: handleOnClick,\n          id: \"back\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100vw\",\n            height: \"100vh\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\"\n          },\n          children: cardList.sort(sortCards).map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragStart: e => dragStartHandler(e, card),\n            onDragLeave: e => dragLeaveHandler(e),\n            onDragEnd: e => dragEndHandler(e),\n            onDragOver: e => dragOverHandler(e),\n            onDrop: e => dragDropHandler(e, card),\n            draggable: true,\n            style: {\n              width: \"150px\",\n              height: \"300px\",\n              border: \"1px solid black\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: card.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: renderContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s(DragAndDrop, \"OoiZxz0aeSntGttCMeyBeJtH1bQ=\");\n_c = DragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"names":["React","useState","DndProvider","HTML5Backend","css","PageOne","useDrag","useDrop","jsxDEV","_jsxDEV","Fragment","_Fragment","DragAndDrop","_s","selectedId","setSelectedId","cardList","setCardList","id","order","text","currentCard","setCurrentCard","handleOnClick","e","target","console","log","dragStartHandler","card","dragLeaveHandler","style","background","dragEndHandler","dragOverHandler","preventDefault","dragDropHandler","map","i","sortCards","a","b","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","BackBtn","onClick","width","height","display","justifyContent","alignItems","sort","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","draggable","border","backend","_c","$RefreshReg$"],"sources":["C:/Users/melni/Documents/GitHub/General_Page/my-app/src/components/DragAndDrop/DragAndDrop.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport css from \"../../main.module.css\";\r\nimport { PageOne } from \"../Game-page/pageOne\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n\r\nexport const DragAndDrop = () => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [cardList, setCardList] = useState([\r\n    { id: 1, order: 1, text: \"Card 1\" },\r\n    { id: 2, order: 2, text: \"Card 2\" },\r\n    { id: 3, order: 3, text: \"Card 3\" },\r\n    { id: 4, order: 4, text: \"Card 4\" },\r\n  ]);\r\n  const [currentCard, setCurrentCard] = useState(null);\r\n\r\n  const handleOnClick = (e) => {\r\n    const id = e.target.id;\r\n    console.log(id);\r\n    setSelectedId(id);\r\n  };\r\n\r\n  const dragStartHandler = (e, card) => {\r\n    console.log(\"card\", card);\r\n    setCurrentCard(card);\r\n  };\r\n  const dragLeaveHandler = (e) => {\r\n    e.target.style.background = \"inherit\";\r\n  };\r\n  const dragEndHandler = (e) => {};\r\n  const dragOverHandler = (e) => {\r\n    e.preventDefault();\r\n    e.target.style.background = \"#808080\";\r\n  };\r\n  const dragDropHandler = (e, card) => {\r\n    e.preventDefault();\r\n    console.log(\"card\", card);\r\n    setCardList(\r\n      cardList.map((i) => {\r\n        if (i.id === card.id) {\r\n          return { ...i, order: currentCard.order };\r\n        }\r\n        if (i.id === currentCard.id) {\r\n          return { ...i, order: card.order };\r\n        }\r\n        return i;\r\n      })\r\n    );\r\n    e.target.style.background = \"white\";\r\n  };\r\n  const sortCards = (a, b) => {\r\n    if (a.order > b.order) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (selectedId === \"back\") {\r\n      return <PageOne />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <button className={css.BackBtn} onClick={handleOnClick} id=\"back\">\r\n            Back\r\n          </button>\r\n          <div\r\n            style={{\r\n              width: \"100vw\",\r\n              height: \"100vh\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            {cardList.sort(sortCards).map((card) => (\r\n              <div\r\n                onDragStart={(e) => dragStartHandler(e, card)}\r\n                onDragLeave={(e) => dragLeaveHandler(e)}\r\n                onDragEnd={(e) => dragEndHandler(e)}\r\n                onDragOver={(e) => dragOverHandler(e)}\r\n                onDrop={(e) => dragDropHandler(e, card)}\r\n                draggable={true}\r\n                style={{\r\n                  width: \"150px\",\r\n                  height: \"300px\",\r\n                  border: \"1px solid black\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {card.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <DndProvider backend={HTML5Backend}>{renderContent()}</DndProvider>;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}