{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melni\\\\Documents\\\\GitHub\\\\General_Page\\\\my-app\\\\src\\\\components\\\\DragAndDrop\\\\DragAndDropGame.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport css from \"../../main.module.css\";\nimport { DragAndDrop } from \"./DragAndDrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DragAndDropGame = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    textData\n  } = _ref;\n  const [selectedId, setSelectedId] = useState(null);\n  const [cardList, setCardList] = useState([{\n    id: 1,\n    order: 0,\n    text: textData.wordsOne\n  }, {\n    id: 2,\n    order: 1,\n    text: textData.wordsTwo\n  }, {\n    id: 3,\n    order: 2,\n    text: textData.wordsThree\n  }, {\n    id: 4,\n    order: 3,\n    text: textData.wordsFour\n  }]);\n  const [currentCard, setCurrentCard] = useState(null);\n  const [firstLeatter, setFirstLeatter] = useState({\n    order: \"\",\n    text: \"\"\n  });\n  const [secondLeater, setSecondLeater] = useState({\n    order: \"\",\n    text: \"\"\n  });\n  const [wordsCard, setWordsCard] = useState([\"d\", \"a\", \"m\", \"n\"]);\n  useEffect(() => {\n    console.log(\"text 1\", firstLeatter, \"text 2\", secondLeater, \"list\", wordsCard, cardList);\n  }, [firstLeatter, secondLeater, wordsCard, cardList]);\n  const handleOnClick = e => {\n    const id = e.target.id;\n    console.log(id);\n    setSelectedId(id);\n  };\n  const dragStartHandler = (e, card) => {\n    setFirstLeatter({\n      ...firstLeatter,\n      text: card.text,\n      order: card.order\n    });\n    console.log(\"card\", card);\n    setCurrentCard(card);\n  };\n  const dragLeaveHandler = e => {\n    e.target.style.background = \"inherit\";\n  };\n  const dragEndHandler = e => {};\n  const dragOverHandler = e => {\n    e.preventDefault();\n    e.target.style.background = \"#808080\";\n  };\n  const dragDropHandler = (e, card) => {\n    e.preventDefault();\n    console.log(\"card\", card);\n    const updatedCardList = cardList.map(item => {\n      if (item.id === card.id) {\n        return {\n          ...item,\n          order: currentCard.order\n        };\n      }\n      if (item.id === currentCard.id) {\n        return {\n          ...item,\n          order: card.order\n        };\n      }\n      return item;\n    });\n    const updatedWordsCard = updatedCardList.sort((a, b) => a.order - b.order).map(item => item.text);\n    setCardList(updatedCardList);\n    // setWordsCard(updatedWordsCard);\n\n    setSecondLeater({\n      ...secondLeater,\n      text: card.text,\n      order: card.order\n    });\n    e.target.style.background = \"white\";\n  };\n  const sortCards = (a, b) => {\n    if (a.order > b.order) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n  const CheckRightWords = () => {\n    const joinedString = cardList.sort((a, b) => a.order - b.order).reduce((acc, card) => acc + card.text, \"\");\n    if (joinedString === wordsCard.join(\"\")) {\n      console.log(\"Good\");\n    } else {\n      console.log(\"Incorrect\");\n      console.log(joinedString);\n      console.log(wordsCard.join(\"\"));\n    }\n  };\n  function Confetti() {\n    _s();\n    const confettiRef = useRef(null);\n    useEffect(() => {\n      const confetti = document.createElement(\"div\");\n      confetti.className = \"confetti\";\n      const colors = [\"#ff0000\", \"#00ff00\", \"#0000ff\", \"#ffff00\", \"#ff00ff\", \"#00ffff\"];\n      const color = colors[Math.floor(Math.random() * colors.length)];\n      confetti.style.backgroundColor = color;\n      const size = Math.floor(Math.random() * 20 + 10) + \"px\";\n      confetti.style.width = size;\n      confetti.style.height = size;\n      const xPos = Math.random() * window.innerWidth + \"px\";\n      const yPos = Math.random() * window.innerHeight + \"px\";\n      confetti.style.left = xPos;\n      confetti.style.top = yPos;\n      const gameContainer = confettiRef.current;\n      if (gameContainer) {\n        gameContainer.appendChild(confetti);\n      } else {\n        console.log(\"Ошибка: Элемент 'confettiRef' не найден.\");\n      }\n      return () => {\n        if (gameContainer && confetti.parentNode === gameContainer) {\n          gameContainer.removeChild(confetti);\n        }\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: confettiRef,\n      id: \"confettiContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n  _s(Confetti, \"mzzNHOJTV5MJRbtA53c0FHBPSpY=\");\n  const renderContent = () => {\n    if (selectedId === \"back\") {\n      return /*#__PURE__*/_jsxDEV(DragAndDrop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: css.BackBtn,\n          onClick: handleOnClick,\n          id: \"back\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.containteCard,\n          children: [cardList.sort(sortCards).map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragStart: e => dragStartHandler(e, card),\n            onDragLeave: e => dragLeaveHandler(e),\n            onDragEnd: e => dragEndHandler(e),\n            onDragOver: e => dragOverHandler(e),\n            onDrop: e => dragDropHandler(e, card),\n            draggable: true,\n            className: css.card,\n            children: card.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.startBtnContainer,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: CheckRightWords,\n              className: css.startBtn,\n              children: \"Gooooo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return renderContent();\n};\n_s2(DragAndDropGame, \"x5pLHO7XgBCqTC3KrsbYwTIF/Qw=\");\n_c = DragAndDropGame;\nvar _c;\n$RefreshReg$(_c, \"DragAndDropGame\");","map":{"version":3,"names":["React","useEffect","useRef","useState","css","DragAndDrop","jsxDEV","_jsxDEV","Fragment","_Fragment","DragAndDropGame","_ref","_s2","_s","$RefreshSig$","textData","selectedId","setSelectedId","cardList","setCardList","id","order","text","wordsOne","wordsTwo","wordsThree","wordsFour","currentCard","setCurrentCard","firstLeatter","setFirstLeatter","secondLeater","setSecondLeater","wordsCard","setWordsCard","console","log","handleOnClick","e","target","dragStartHandler","card","dragLeaveHandler","style","background","dragEndHandler","dragOverHandler","preventDefault","dragDropHandler","updatedCardList","map","item","updatedWordsCard","sort","a","b","sortCards","CheckRightWords","joinedString","reduce","acc","join","Confetti","confettiRef","confetti","document","createElement","className","colors","color","Math","floor","random","length","backgroundColor","size","width","height","xPos","window","innerWidth","yPos","innerHeight","left","top","gameContainer","current","appendChild","parentNode","removeChild","ref","fileName","_jsxFileName","lineNumber","columnNumber","renderContent","children","BackBtn","onClick","containteCard","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","draggable","startBtnContainer","startBtn","_c","$RefreshReg$"],"sources":["C:/Users/melni/Documents/GitHub/General_Page/my-app/src/components/DragAndDrop/DragAndDropGame.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport css from \"../../main.module.css\";\r\nimport { DragAndDrop } from \"./DragAndDrop\";\r\n\r\nexport const DragAndDropGame = ({ textData }) => {\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [cardList, setCardList] = useState([\r\n    { id: 1, order: 0, text: textData.wordsOne },\r\n    { id: 2, order: 1, text: textData.wordsTwo },\r\n    { id: 3, order: 2, text: textData.wordsThree },\r\n    { id: 4, order: 3, text: textData.wordsFour },\r\n  ]);\r\n  const [currentCard, setCurrentCard] = useState(null);\r\n  const [firstLeatter, setFirstLeatter] = useState({ order: \"\", text: \"\" });\r\n  const [secondLeater, setSecondLeater] = useState({ order: \"\", text: \"\" });\r\n  const [wordsCard, setWordsCard] = useState([\"d\", \"a\", \"m\", \"n\"]);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"text 1\",\r\n      firstLeatter,\r\n      \"text 2\",\r\n      secondLeater,\r\n      \"list\",\r\n      wordsCard,\r\n      cardList\r\n    );\r\n  }, [firstLeatter, secondLeater, wordsCard, cardList]);\r\n  const handleOnClick = (e) => {\r\n    const id = e.target.id;\r\n    console.log(id);\r\n    setSelectedId(id);\r\n  };\r\n  const dragStartHandler = (e, card) => {\r\n    setFirstLeatter({ ...firstLeatter, text: card.text, order: card.order });\r\n    console.log(\"card\", card);\r\n    setCurrentCard(card);\r\n  };\r\n  const dragLeaveHandler = (e) => {\r\n    e.target.style.background = \"inherit\";\r\n  };\r\n  const dragEndHandler = (e) => {};\r\n  const dragOverHandler = (e) => {\r\n    e.preventDefault();\r\n    e.target.style.background = \"#808080\";\r\n  };\r\n  const dragDropHandler = (e, card) => {\r\n    e.preventDefault();\r\n    console.log(\"card\", card);\r\n\r\n    const updatedCardList = cardList.map((item) => {\r\n      if (item.id === card.id) {\r\n        return { ...item, order: currentCard.order };\r\n      }\r\n      if (item.id === currentCard.id) {\r\n        return { ...item, order: card.order };\r\n      }\r\n      return item;\r\n    });\r\n\r\n    const updatedWordsCard = updatedCardList\r\n      .sort((a, b) => a.order - b.order)\r\n      .map((item) => item.text);\r\n\r\n    setCardList(updatedCardList);\r\n    // setWordsCard(updatedWordsCard);\r\n\r\n    setSecondLeater({ ...secondLeater, text: card.text, order: card.order });\r\n    e.target.style.background = \"white\";\r\n  };\r\n\r\n  const sortCards = (a, b) => {\r\n    if (a.order > b.order) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n  const CheckRightWords = () => {\r\n    const joinedString = cardList\r\n      .sort((a, b) => a.order - b.order)\r\n      .reduce((acc, card) => acc + card.text, \"\");\r\n\r\n    if (joinedString === wordsCard.join(\"\")) {\r\n      console.log(\"Good\");\r\n    } else {\r\n      console.log(\"Incorrect\");\r\n      console.log(joinedString);\r\n      console.log(wordsCard.join(\"\"));\r\n    }\r\n  };\r\n\r\n  function Confetti() {\r\n    const confettiRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n      const confetti = document.createElement(\"div\");\r\n      confetti.className = \"confetti\";\r\n\r\n      const colors = [\r\n        \"#ff0000\",\r\n        \"#00ff00\",\r\n        \"#0000ff\",\r\n        \"#ffff00\",\r\n        \"#ff00ff\",\r\n        \"#00ffff\",\r\n      ];\r\n      const color = colors[Math.floor(Math.random() * colors.length)];\r\n      confetti.style.backgroundColor = color;\r\n\r\n      const size = Math.floor(Math.random() * 20 + 10) + \"px\";\r\n      confetti.style.width = size;\r\n      confetti.style.height = size;\r\n\r\n      const xPos = Math.random() * window.innerWidth + \"px\";\r\n      const yPos = Math.random() * window.innerHeight + \"px\";\r\n      confetti.style.left = xPos;\r\n      confetti.style.top = yPos;\r\n\r\n      const gameContainer = confettiRef.current;\r\n      if (gameContainer) {\r\n        gameContainer.appendChild(confetti);\r\n      } else {\r\n        console.log(\"Ошибка: Элемент 'confettiRef' не найден.\");\r\n      }\r\n\r\n      return () => {\r\n        if (gameContainer && confetti.parentNode === gameContainer) {\r\n          gameContainer.removeChild(confetti);\r\n        }\r\n      };\r\n    }, []);\r\n\r\n    return <div ref={confettiRef} id=\"confettiContainer\" />;\r\n  }\r\n\r\n  const renderContent = () => {\r\n    if (selectedId === \"back\") {\r\n      return <DragAndDrop />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <button className={css.BackBtn} onClick={handleOnClick} id=\"back\">\r\n            Back\r\n          </button>\r\n          <div className={css.containteCard}>\r\n            {cardList.sort(sortCards).map((card) => (\r\n              <div\r\n                onDragStart={(e) => dragStartHandler(e, card)}\r\n                onDragLeave={(e) => dragLeaveHandler(e)}\r\n                onDragEnd={(e) => dragEndHandler(e)}\r\n                onDragOver={(e) => dragOverHandler(e)}\r\n                onDrop={(e) => dragDropHandler(e, card)}\r\n                draggable={true}\r\n                className={css.card}\r\n              >\r\n                {card.text}\r\n              </div>\r\n            ))}\r\n            <div className={css.startBtnContainer}>\r\n              <button onClick={CheckRightWords} className={css.startBtn}>\r\n                Gooooo\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderContent();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}