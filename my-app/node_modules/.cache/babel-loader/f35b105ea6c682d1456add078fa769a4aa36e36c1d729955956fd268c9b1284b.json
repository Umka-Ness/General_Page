{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melni\\\\Documents\\\\GitHub\\\\General_Page\\\\my-app\\\\src\\\\components\\\\Auth\\\\LiquidButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LiquidButton = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [points, setPoints] = useState([]);\n  const [mouseX, setMouseX] = useState(0);\n  const [mouseY, setMouseY] = useState(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    let animationFrameId;\n    const pointCount = 8;\n    const viscosity = 20;\n    const mouseDist = 70;\n    const damping = 0.05;\n    const addPoint = (x, y, level) => {\n      setPoints(prevPoints => [...prevPoints, {\n        x,\n        y,\n        ix: x,\n        iy: y,\n        vx: 0,\n        vy: 0,\n        level\n      }]);\n    };\n    const initializePoints = () => {\n      const buttonWidth = canvas.width;\n      const buttonHeight = canvas.height;\n      const addButtonPoints = (x, y, level) => {\n        addPoint(50 + x, 50 + y, level);\n        addPoint(50 + x, buttonHeight + y, level);\n      };\n      let x = buttonHeight / 2;\n      for (let j = 1; j < pointCount; j++) {\n        addButtonPoints(x, 0, 1);\n        x += buttonHeight / (pointCount - 1);\n      }\n      x = buttonHeight / 2;\n      for (let j = 1; j < pointCount; j++) {\n        addButtonPoints(x, buttonHeight, 2);\n        x += buttonHeight / (pointCount - 1);\n      }\n      let y = buttonWidth / 2;\n      for (let i = 1; i < pointCount - 1; i++) {\n        addButtonPoints(0, y, 2);\n        addButtonPoints(buttonWidth, y, 2);\n        y += buttonWidth / (pointCount - 1);\n      }\n    };\n    const handleMouseMove = e => {\n      setMouseX(e.pageX);\n      setMouseY(e.pageY);\n    };\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    const updatePoints = () => {\n      const relMouseX = mouseX - canvas.offsetLeft;\n      const relMouseY = mouseY - canvas.offsetTop;\n      setPoints(prevPoints => {\n        const updatedPoints = prevPoints.map(point => {\n          const dx = point.ix - relMouseX;\n          const dy = point.iy - relMouseY;\n          const dist = Math.sqrt(dx * dx + dy * dy);\n          if (dist < mouseDist) {\n            const angle = Math.atan2(dy, dx);\n            const tx = relMouseX + Math.cos(angle) * mouseDist;\n            const ty = relMouseY + Math.sin(angle) * mouseDist;\n            point.vx += tx - point.x;\n            point.vy += ty - point.y;\n          }\n          const vx = (point.ix - point.x) * viscosity + point.vx * (1 - damping);\n          const vy = (point.iy - point.y) * viscosity + point.vy * (1 - damping);\n          point.vx = vx;\n          point.vy = vy;\n          point.x += point.vx;\n          point.y += point.vy;\n          return point;\n        });\n        return updatedPoints;\n      });\n      animationFrameId = requestAnimationFrame(updatePoints);\n    };\n    const renderCanvas = () => {\n      const buttonWidth = canvas.width;\n      const buttonHeight = canvas.height;\n      context.clearRect(0, 0, buttonWidth, buttonHeight);\n      for (let i = 0; i < points.length; i++) {\n        const pointA = points[i];\n        for (let j = i + 1; j < points.length; j++) {\n          const pointB = points[j];\n          context.beginPath();\n          context.moveTo(pointA.x, pointA.y);\n          context.lineTo(pointB.x, pointB.y);\n          context.lineWidth = Math.min(pointA.level, pointB.level);\n          context.strokeStyle = \"rgba(255,255,255,0.5)\";\n          context.stroke();\n        }\n      }\n      animationFrameId = requestAnimationFrame(renderCanvas);\n    };\n    initializePoints();\n    updatePoints();\n    renderCanvas();\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: canvasRef,\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 200,\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LiquidButton, \"n8qWqB/VxgKCDp7gtBe8pVAGlOs=\");\n_c = LiquidButton;\nexport default LiquidButton;\nvar _c;\n$RefreshReg$(_c, \"LiquidButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","LiquidButton","_s","canvasRef","points","setPoints","mouseX","setMouseX","mouseY","setMouseY","canvas","current","context","getContext","animationFrameId","pointCount","viscosity","mouseDist","damping","addPoint","x","y","level","prevPoints","ix","iy","vx","vy","initializePoints","buttonWidth","width","buttonHeight","height","addButtonPoints","j","i","handleMouseMove","e","pageX","pageY","document","addEventListener","updatePoints","relMouseX","offsetLeft","relMouseY","offsetTop","updatedPoints","map","point","dx","dy","dist","Math","sqrt","angle","atan2","tx","cos","ty","sin","requestAnimationFrame","renderCanvas","clearRect","length","pointA","pointB","beginPath","moveTo","lineTo","lineWidth","min","strokeStyle","stroke","cancelAnimationFrame","removeEventListener","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/melni/Documents/GitHub/General_Page/my-app/src/components/Auth/LiquidButton.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst LiquidButton = () => {\r\n  const canvasRef = useRef(null);\r\n  const [points, setPoints] = useState([]);\r\n  const [mouseX, setMouseX] = useState(0);\r\n  const [mouseY, setMouseY] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    let animationFrameId;\r\n\r\n    const pointCount = 8;\r\n    const viscosity = 20;\r\n    const mouseDist = 70;\r\n    const damping = 0.05;\r\n\r\n    const addPoint = (x, y, level) => {\r\n      setPoints((prevPoints) => [\r\n        ...prevPoints,\r\n        {\r\n          x,\r\n          y,\r\n          ix: x,\r\n          iy: y,\r\n          vx: 0,\r\n          vy: 0,\r\n          level,\r\n        },\r\n      ]);\r\n    };\r\n\r\n    const initializePoints = () => {\r\n      const buttonWidth = canvas.width;\r\n      const buttonHeight = canvas.height;\r\n\r\n      const addButtonPoints = (x, y, level) => {\r\n        addPoint(50 + x, 50 + y, level);\r\n        addPoint(50 + x, buttonHeight + y, level);\r\n      };\r\n\r\n      let x = buttonHeight / 2;\r\n\r\n      for (let j = 1; j < pointCount; j++) {\r\n        addButtonPoints(x, 0, 1);\r\n        x += buttonHeight / (pointCount - 1);\r\n      }\r\n\r\n      x = buttonHeight / 2;\r\n      for (let j = 1; j < pointCount; j++) {\r\n        addButtonPoints(x, buttonHeight, 2);\r\n        x += buttonHeight / (pointCount - 1);\r\n      }\r\n\r\n      let y = buttonWidth / 2;\r\n      for (let i = 1; i < pointCount - 1; i++) {\r\n        addButtonPoints(0, y, 2);\r\n        addButtonPoints(buttonWidth, y, 2);\r\n        y += buttonWidth / (pointCount - 1);\r\n      }\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n      setMouseX(e.pageX);\r\n      setMouseY(e.pageY);\r\n    };\r\n\r\n    document.addEventListener(\"mousemove\", handleMouseMove);\r\n\r\n    const updatePoints = () => {\r\n      const relMouseX = mouseX - canvas.offsetLeft;\r\n      const relMouseY = mouseY - canvas.offsetTop;\r\n\r\n      setPoints((prevPoints) => {\r\n        const updatedPoints = prevPoints.map((point) => {\r\n          const dx = point.ix - relMouseX;\r\n          const dy = point.iy - relMouseY;\r\n          const dist = Math.sqrt(dx * dx + dy * dy);\r\n\r\n          if (dist < mouseDist) {\r\n            const angle = Math.atan2(dy, dx);\r\n            const tx = relMouseX + Math.cos(angle) * mouseDist;\r\n            const ty = relMouseY + Math.sin(angle) * mouseDist;\r\n\r\n            point.vx += tx - point.x;\r\n            point.vy += ty - point.y;\r\n          }\r\n\r\n          const vx =\r\n            (point.ix - point.x) * viscosity + point.vx * (1 - damping);\r\n          const vy =\r\n            (point.iy - point.y) * viscosity + point.vy * (1 - damping);\r\n\r\n          point.vx = vx;\r\n          point.vy = vy;\r\n          point.x += point.vx;\r\n          point.y += point.vy;\r\n\r\n          return point;\r\n        });\r\n\r\n        return updatedPoints;\r\n      });\r\n\r\n      animationFrameId = requestAnimationFrame(updatePoints);\r\n    };\r\n\r\n    const renderCanvas = () => {\r\n      const buttonWidth = canvas.width;\r\n      const buttonHeight = canvas.height;\r\n\r\n      context.clearRect(0, 0, buttonWidth, buttonHeight);\r\n\r\n      for (let i = 0; i < points.length; i++) {\r\n        const pointA = points[i];\r\n        for (let j = i + 1; j < points.length; j++) {\r\n          const pointB = points[j];\r\n\r\n          context.beginPath();\r\n          context.moveTo(pointA.x, pointA.y);\r\n          context.lineTo(pointB.x, pointB.y);\r\n          context.lineWidth = Math.min(pointA.level, pointB.level);\r\n          context.strokeStyle = \"rgba(255,255,255,0.5)\";\r\n          context.stroke();\r\n        }\r\n      }\r\n\r\n      animationFrameId = requestAnimationFrame(renderCanvas);\r\n    };\r\n\r\n    initializePoints();\r\n    updatePoints();\r\n    renderCanvas();\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button ref={canvasRef}>\r\n        <canvas ref={canvasRef} width={200} height={100} />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LiquidButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}