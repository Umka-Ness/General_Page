{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melni\\\\Documents\\\\GitHub\\\\General_Page\\\\my-app\\\\src\\\\components\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport css from \"../../main.module.css\";\nimport firebase from \"firebase/compat/app\";\nimport { addDoc, collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport { Register } from \"./Register\";\nimport { NavigationBtn } from \"../Navigation/NavigationBtn\";\nimport { Context } from \"../../App\";\nimport firebaseConfig from \"../../firebase\";\nimport bgImg from \"./img/podvodnie-peizazhi-1.jpg\";\nimport { getAuth, setPersistence, browserLocalPersistence } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sessionTime = async () => {\n  const auth = getAuth();\n  await setPersistence(auth, browserLocalPersistence).then(data => {\n    console.log(data);\n    // Тип сохранения состояния аутентификации успешно установлен\n    // Здесь можно продолжить выполнение операций аутентификации\n  }).catch(error => {\n    console.log(`sessionTime fun: ${error} `);\n    // Обработка ошибок при установке типа сохранения состояния аутентификации\n  });\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nsessionTime();\nexport const Login = id => {\n  _s();\n  const [value, setValue] = useState(false);\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isGood, setIsGood] = useState(false);\n  const refError = useRef(null);\n  const {\n    auth\n  } = useContext(Context);\n  useEffect(() => {\n    // Проверка авторизации пользователя при загрузке компонента\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        setIsGood(true);\n      } else {\n        setIsGood(false);\n      }\n    });\n\n    // return () => {\n    //   unsubscribe(); // Отписка от обновлений авторизации при размонтировании компонента\n    // };\n  }, []);\n  const registerGmail = async e => {\n    e.preventDefault();\n    const provider = new firebase.auth.GoogleAuthProvider();\n    try {\n      const {\n        user\n      } = await auth.signInWithPopup(provider);\n      console.log(user);\n      const docRef = await addDoc(collection(db, \"users\"), {\n        name: user.displayName,\n        login: login ? login : user.displayName,\n        password: password ? password : user.multiFactor.user.stsTokenManager.accessToken,\n        email: user.email,\n        phoneNumber: user.phoneNumber,\n        accessToken: user.multiFactor.user.stsTokenManager.accessToken,\n        photoURL: user.photoURL\n        // date: new Date(),\n      });\n\n      setIsGood(true);\n    } catch (e) {\n      console.error(\"Error adding document or signInWithPopup is closed: \", e);\n    } finally {}\n  };\n  const fetchData = async e => {\n    const errorRefCurrent = refError.current;\n    e.preventDefault();\n    if (login === \"\" || password === \"\") {\n      errorRefCurrent.style.display = \"inherit\";\n      setTimeout(() => {\n        errorRefCurrent.style.display = \"none\";\n      }, 5000);\n    }\n    try {\n      const querySnapshot = await getDocs(collection(db, \"users\"));\n      const userArray = querySnapshot.docs;\n      for (let i = 0; i < userArray.length; i++) {\n        const userData = userArray[i].data();\n        const userLogin = userData.login;\n        const userPassword = userData.password;\n        if (login === userLogin && password === userPassword) {\n          setIsGood(true);\n          console.log(\"Success\");\n          break; // Прерываем цикл после нахождения первого совпадения\n        } else {\n          errorRefCurrent.style.display = \"inherit\";\n          setTimeout(() => {\n            errorRefCurrent.style.display = \"none\";\n          }, 5000);\n          console.log(\"nee\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при чтении данных:\", error);\n    }\n  };\n  const renderContent = () => {\n    if (value) {\n      return /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this);\n    } else if (isGood) {\n      return /*#__PURE__*/_jsxDEV(NavigationBtn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.bgContainer,\n          style: {\n            backgroundImage: `url(${bgImg})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.authContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: css.auth,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.namePage,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              ref: refError,\n              className: css.errorRegister,\n              children: \"incorrect username or password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Login\",\n              className: css.login,\n              value: login.trim(),\n              onChange: e => setLogin(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              className: css.password,\n              value: password.trim(),\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchData,\n              className: css.loginInBtn,\n              children: \"Login in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"#000\",\n                textAlign: \"center\"\n              },\n              children: \"or\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setValue(true),\n              className: css.createBtn,\n              children: \"Create account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: registerGmail,\n              className: css.gmailBtn,\n              children: \"Gmail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderContent()\n  }, void 0, false);\n};\n_s(Login, \"8f4XMB6VUybGvVRXJb7mgqUgRKc=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","css","firebase","addDoc","collection","getDocs","getFirestore","initializeApp","Register","NavigationBtn","Context","firebaseConfig","bgImg","getAuth","setPersistence","browserLocalPersistence","jsxDEV","_jsxDEV","Fragment","_Fragment","sessionTime","auth","then","data","console","log","catch","error","app","db","Login","id","_s","value","setValue","login","setLogin","password","setPassword","isGood","setIsGood","refError","unsubscribe","onAuthStateChanged","user","registerGmail","e","preventDefault","provider","GoogleAuthProvider","signInWithPopup","docRef","name","displayName","multiFactor","stsTokenManager","accessToken","email","phoneNumber","photoURL","fetchData","errorRefCurrent","current","style","display","setTimeout","querySnapshot","userArray","docs","i","length","userData","userLogin","userPassword","renderContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","bgContainer","backgroundImage","authContainer","namePage","ref","errorRegister","type","placeholder","trim","onChange","target","onClick","loginInBtn","color","textAlign","createBtn","gmailBtn","_c","$RefreshReg$"],"sources":["C:/Users/melni/Documents/GitHub/General_Page/my-app/src/components/Auth/Login.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport css from \"../../main.module.css\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport { addDoc, collection, getDocs, getFirestore } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { Register } from \"./Register\";\r\nimport { NavigationBtn } from \"../Navigation/NavigationBtn\";\r\nimport { Context } from \"../../App\";\r\nimport firebaseConfig from \"../../firebase\";\r\nimport bgImg from \"./img/podvodnie-peizazhi-1.jpg\";\r\nimport {\r\n  getAuth,\r\n  setPersistence,\r\n  browserLocalPersistence,\r\n} from \"firebase/auth\";\r\n\r\nconst sessionTime = async () => {\r\n  const auth = getAuth();\r\n\r\n  await setPersistence(auth, browserLocalPersistence)\r\n    .then((data) => {\r\n      console.log(data);\r\n      // Тип сохранения состояния аутентификации успешно установлен\r\n      // Здесь можно продолжить выполнение операций аутентификации\r\n    })\r\n    .catch((error) => {\r\n      console.log(`sessionTime fun: ${error} `);\r\n      // Обработка ошибок при установке типа сохранения состояния аутентификации\r\n    });\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nsessionTime();\r\nexport const Login = (id) => {\r\n  const [value, setValue] = useState(false);\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isGood, setIsGood] = useState(false);\r\n  const refError = useRef(null);\r\n\r\n  const { auth } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    // Проверка авторизации пользователя при загрузке компонента\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setIsGood(true);\r\n      } else {\r\n        setIsGood(false);\r\n      }\r\n    });\r\n\r\n    // return () => {\r\n    //   unsubscribe(); // Отписка от обновлений авторизации при размонтировании компонента\r\n    // };\r\n  }, []);\r\n\r\n  const registerGmail = async (e) => {\r\n    e.preventDefault();\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    try {\r\n      const { user } = await auth.signInWithPopup(provider);\r\n      console.log(user);\r\n      const docRef = await addDoc(collection(db, \"users\"), {\r\n        name: user.displayName,\r\n        login: login ? login : user.displayName,\r\n        password: password\r\n          ? password\r\n          : user.multiFactor.user.stsTokenManager.accessToken,\r\n\r\n        email: user.email,\r\n        phoneNumber: user.phoneNumber,\r\n        accessToken: user.multiFactor.user.stsTokenManager.accessToken,\r\n        photoURL: user.photoURL,\r\n        // date: new Date(),\r\n      });\r\n      setIsGood(true);\r\n    } catch (e) {\r\n      console.error(\"Error adding document or signInWithPopup is closed: \", e);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  const fetchData = async (e) => {\r\n    const errorRefCurrent = refError.current;\r\n    e.preventDefault();\r\n    if (login === \"\" || password === \"\") {\r\n      errorRefCurrent.style.display = \"inherit\";\r\n      setTimeout(() => {\r\n        errorRefCurrent.style.display = \"none\";\r\n      }, 5000);\r\n    }\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, \"users\"));\r\n      const userArray = querySnapshot.docs;\r\n      for (let i = 0; i < userArray.length; i++) {\r\n        const userData = userArray[i].data();\r\n        const userLogin = userData.login;\r\n        const userPassword = userData.password;\r\n        if (login === userLogin && password === userPassword) {\r\n          setIsGood(true);\r\n\r\n          console.log(\"Success\");\r\n          break; // Прерываем цикл после нахождения первого совпадения\r\n        } else {\r\n          errorRefCurrent.style.display = \"inherit\";\r\n          setTimeout(() => {\r\n            errorRefCurrent.style.display = \"none\";\r\n          }, 5000);\r\n          console.log(\"nee\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при чтении данных:\", error);\r\n    }\r\n  };\r\n  const renderContent = () => {\r\n    if (value) {\r\n      return <Register />;\r\n    } else if (isGood) {\r\n      return <NavigationBtn />;\r\n    } else {\r\n      return (\r\n        <>\r\n          <div\r\n            className={css.bgContainer}\r\n            style={{ backgroundImage: `url(${bgImg})` }}\r\n          ></div>\r\n          <div className={css.authContainer}>\r\n            <div className={css.auth}>\r\n              <p className={css.namePage}>Register</p>\r\n\r\n              <p ref={refError} className={css.errorRegister}>\r\n                incorrect username or password\r\n              </p>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Login\"\r\n                className={css.login}\r\n                value={login.trim()}\r\n                onChange={(e) => setLogin(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                className={css.password}\r\n                value={password.trim()}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <button onClick={fetchData} className={css.loginInBtn}>\r\n                Login in\r\n              </button>\r\n              <p style={{ color: \"#000\", textAlign: \"center\" }}>or</p>\r\n\r\n              <button onClick={() => setValue(true)} className={css.createBtn}>\r\n                Create account\r\n              </button>\r\n              <button onClick={registerGmail} className={css.gmailBtn}>\r\n                Gmail\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <>{renderContent()}</>;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}