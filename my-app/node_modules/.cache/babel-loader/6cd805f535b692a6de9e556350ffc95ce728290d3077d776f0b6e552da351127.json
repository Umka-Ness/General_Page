{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melni\\\\Documents\\\\GitHub\\\\General_Page\\\\my-app\\\\src\\\\components\\\\Auth\\\\LiquidButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Auth/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiquidButton = () => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const [cursorPosition, setCursorPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const handleMouseMove = event => {\n    setCursorPosition({\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n  const calculateLiquidEffect = () => {\n    if (!isHovered) return {};\n    const {\n      x,\n      y\n    } = cursorPosition;\n    const buttonRect = document.getElementById(\"liquid-button\").getBoundingClientRect();\n    const offsetX = (x - buttonRect.left) / buttonRect.width;\n    const offsetY = (y - buttonRect.top) / buttonRect.height;\n    const liquidEffect = {\n      transform: `translate(${offsetX * 10}px, ${offsetY * 10}px)`,\n      boxShadow: `${offsetX * 30}px ${offsetY * 30}px 20px rgba(0, 0, 0, 0.3)`\n    };\n    return liquidEffect;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"liquid-button\",\n    className: \"liquid-button\",\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onMouseMove: handleMouseMove,\n    children: [\"Liquid Button\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `liquid-effect ${isHovered ? \"active\" : \"\"}`,\n      style: calculateLiquidEffect()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LiquidButton, \"zjEAxiibX3M8P93Xyu+fwRjEDpA=\");\n_c = LiquidButton;\nexport default LiquidButton;\nvar _c;\n$RefreshReg$(_c, \"LiquidButton\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LiquidButton","_s","isHovered","setIsHovered","cursorPosition","setCursorPosition","x","y","handleMouseEnter","handleMouseLeave","handleMouseMove","event","clientX","clientY","calculateLiquidEffect","buttonRect","document","getElementById","getBoundingClientRect","offsetX","left","width","offsetY","top","height","liquidEffect","transform","boxShadow","id","className","onMouseEnter","onMouseLeave","onMouseMove","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/melni/Documents/GitHub/General_Page/my-app/src/components/Auth/LiquidButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../Auth/auth\";\r\nconst LiquidButton = () => {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsHovered(false);\r\n  };\r\n\r\n  const handleMouseMove = (event) => {\r\n    setCursorPosition({ x: event.clientX, y: event.clientY });\r\n  };\r\n\r\n  const calculateLiquidEffect = () => {\r\n    if (!isHovered) return {};\r\n\r\n    const { x, y } = cursorPosition;\r\n    const buttonRect = document\r\n      .getElementById(\"liquid-button\")\r\n      .getBoundingClientRect();\r\n\r\n    const offsetX = (x - buttonRect.left) / buttonRect.width;\r\n    const offsetY = (y - buttonRect.top) / buttonRect.height;\r\n\r\n    const liquidEffect = {\r\n      transform: `translate(${offsetX * 10}px, ${offsetY * 10}px)`,\r\n      boxShadow: `${offsetX * 30}px ${offsetY * 30}px 20px rgba(0, 0, 0, 0.3)`,\r\n    };\r\n\r\n    return liquidEffect;\r\n  };\r\n\r\n  return (\r\n    <button\r\n      id=\"liquid-button\"\r\n      className=\"liquid-button\"\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      onMouseMove={handleMouseMove}\r\n    >\r\n      Liquid Button\r\n      <div\r\n        className={`liquid-effect ${isHovered ? \"active\" : \"\"}`}\r\n        style={calculateLiquidEffect()}\r\n      ></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LiquidButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC;IAAES,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAEpE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMO,eAAe,GAAIC,KAAK,IAAK;IACjCN,iBAAiB,CAAC;MAAEC,CAAC,EAAEK,KAAK,CAACC,OAAO;MAAEL,CAAC,EAAEI,KAAK,CAACE;IAAQ,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI,CAACZ,SAAS,EAAE,OAAO,CAAC,CAAC;IAEzB,MAAM;MAAEI,CAAC;MAAEC;IAAE,CAAC,GAAGH,cAAc;IAC/B,MAAMW,UAAU,GAAGC,QAAQ,CACxBC,cAAc,CAAC,eAAe,CAAC,CAC/BC,qBAAqB,CAAC,CAAC;IAE1B,MAAMC,OAAO,GAAG,CAACb,CAAC,GAAGS,UAAU,CAACK,IAAI,IAAIL,UAAU,CAACM,KAAK;IACxD,MAAMC,OAAO,GAAG,CAACf,CAAC,GAAGQ,UAAU,CAACQ,GAAG,IAAIR,UAAU,CAACS,MAAM;IAExD,MAAMC,YAAY,GAAG;MACnBC,SAAS,EAAG,aAAYP,OAAO,GAAG,EAAG,OAAMG,OAAO,GAAG,EAAG,KAAI;MAC5DK,SAAS,EAAG,GAAER,OAAO,GAAG,EAAG,MAAKG,OAAO,GAAG,EAAG;IAC/C,CAAC;IAED,OAAOG,YAAY;EACrB,CAAC;EAED,oBACE1B,OAAA;IACE6B,EAAE,EAAC,eAAe;IAClBC,SAAS,EAAC,eAAe;IACzBC,YAAY,EAAEtB,gBAAiB;IAC/BuB,YAAY,EAAEtB,gBAAiB;IAC/BuB,WAAW,EAAEtB,eAAgB;IAAAuB,QAAA,GAC9B,eAEC,eAAAlC,OAAA;MACE8B,SAAS,EAAG,iBAAgB3B,SAAS,GAAG,QAAQ,GAAG,EAAG,EAAE;MACxDgC,KAAK,EAAEpB,qBAAqB,CAAC;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACrC,EAAA,CAlDID,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAoDlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}